{"version":3,"sources":["components/Checkbox.tsx","components/Delete.tsx","components/Todo.tsx","components/Title.tsx","containers/TodoListContainer.tsx","App.tsx","index.tsx"],"names":["Label","styled","label","Input","input","Span","span","Checkbox","content","onChange","checked","className","type","event","Button","button","Delete","Container","div","Todo","todo","checkBoxChanged","deleteTodo","console","log","id","isDone","Title","title","TodoListContainer","generateID","Math","random","toString","substr","useState","todos","map","key","App","ReactDOM","render","document","getElementById"],"mappings":"ymCAQA,IAAMA,EAAQC,IAAOC,MAAV,KAWLC,EAAQF,IAAOG,MAAV,KAILC,EAAOJ,IAAOK,KAAV,KAqCKC,EAbE,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,QAIrC,OACE,kBAACV,EAAD,CAAOW,UAAWD,EAAU,UAAY,IACrCF,EACD,kBAACL,EAAD,CAAOS,KAAK,WAAWH,SANT,SAACI,GACjBJ,OAME,kBAACJ,EAAD,Q,6NCjDN,IAAMS,EAASb,IAAOc,OAAV,KAcGC,EAJA,WACb,OAAO,kBAACF,EAAD,W,wJCFT,IAAMG,EAAYhB,IAAOiB,IAAV,KAsBAC,EAhBF,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,KAAmD,EAA7CC,gBAA6C,EAA5BC,WAIrC,OACE,kBAACL,EAAD,KACE,kBAAC,EAAD,CACET,QAASY,EAAKZ,QACdC,SAPa,WACjBc,QAAQC,IAAIJ,EAAKK,KAObf,QAASU,EAAKM,SAEhB,kBAAC,EAAD,Q,qPC1BN,IAAMT,EAAYhB,IAAOiB,IAAV,KAeAS,EAJD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MACf,OAAO,kBAAC,EAAD,KAAYA,I,ySCbrB,IAAMX,EAAYhB,IAAOiB,IAAV,KA4CAW,EAhCW,WACxB,IAAMC,EAAa,WACjB,MACE,IACAC,KAAKC,SACFC,SAAS,IACTC,OAAO,EAAG,IANa,EAUJC,mBAAS,CACjC,CAAEV,GAAIK,IAAcJ,QAAQ,EAAOlB,QAAS,UAC5C,CAAEiB,GAAIK,IAAcJ,QAAQ,EAAOlB,QAAS,UAC5C,CAAEiB,GAAIK,IAAcJ,QAAQ,EAAOlB,QAAS,UAC5C,CAAEiB,GAAIK,IAAcJ,QAAQ,EAAOlB,QAAS,YAdhB,mBAUvB4B,EAVuB,UAiB9B,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAOR,MAAO,cACbQ,EAAMC,KAAI,SAAAjB,GAAI,OACb,kBAAC,EAAD,CACEkB,IAAKlB,EAAKK,GACVL,KAAMA,EACNC,gBAAiB,iBAAM,SACvBC,WAAY,iBAAM,iBClCbiB,G,MAJH,WACV,OAAO,kBAAC,EAAD,QCDTC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e87e577c.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\ntype CheckboxProps = {\n  content: string;\n  onChange: Function;\n  checked: boolean;\n};\nconst Label = styled.label`\n  padding: 15px 30px;\n  padding-left: 40px;\n  vertical-align: text-top;\n  position: relative;\n  cursor: pointer;\n\n  &.checked {\n    text-decoration: line-through;\n  }\n`;\nconst Input = styled.input`\n  position: absolute;\n  opacity: 0;\n`;\nconst Span = styled.span`\n  position: absolute;\n  top: 32px;\n  left: 3px;\n  height: 25px;\n  width: 25px;\n  background-color: #eee;\n\n  &:after {\n    content: \"\";\n    position: absolute;\n    display: none;\n    margin-right: 10px;\n    left: 9px;\n    top: 5px;\n    width: 5px;\n    height: 10px;\n    border: solid black;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n  }\n`;\nconst Checkbox = ({ content, onChange, checked }: CheckboxProps) => {\n  const onChanged = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    onChange();\n  };\n  return (\n    <Label className={checked ? \"checked\" : \"\"}>\n      {content}\n      <Input type=\"checkbox\" onChange={onChanged}></Input>\n      <Span />\n    </Label>\n  );\n};\n\nexport default Checkbox;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ntype TitleProps = {\n  title: string;\n};\nconst Button = styled.button`\n  float: right;\n  background-color: transparent;\n  border-width: 0;\n  color: white;\n  font-size: 30px;\n  margin-left: auto;\n  cursor: pointer;\n`;\n\nconst Delete = () => {\n  return <Button>X</Button>;\n};\n\nexport default Delete;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Checkbox from \"./Checkbox\";\nimport Delete from \"./Delete\";\n\ntype TodoProps = {\n  todo: {\n    id: string;\n    isDone: boolean;\n    content: string;\n  };\n  checkBoxChanged: Function;\n  deleteTodo: Function;\n};\n\nconst Container = styled.div`\n  display: flex;\n  margin: 5px 1px;\n  width: 90%;\n  border: 1px white solid;\n`;\nconst Todo = ({ todo, checkBoxChanged, deleteTodo }: TodoProps) => {\n  const updateTodo = () => {\n    console.log(todo.id);\n  };\n  return (\n    <Container>\n      <Checkbox\n        content={todo.content}\n        onChange={updateTodo}\n        checked={todo.isDone}\n      />\n      <Delete />\n    </Container>\n  );\n};\n\nexport default Todo;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ntype TitleProps = {\n  title: string;\n};\nconst Container = styled.div`\n  display: block;\n  float: left;\n  font-size: 100px;\n  font-weight: 100;\n  text-align: center;\n  text-rendering: optimizelegibility;\n  width: 100%;\n  color: #f4f9e9;\n`;\n\nconst Title = ({ title }: TitleProps) => {\n  return <Container>{title}</Container>;\n};\n\nexport default Title;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Todo from \"../components/Todo\";\nimport Title from \"../components/Title\";\n\nconst Container = styled.div`\n  margin: auto;\n  background-color: #284b63;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n  width: 50vw;\n  max-width: 800px;\n`;\nconst TodoListContainer = () => {\n  const generateID = () => {\n    return (\n      \"_\" +\n      Math.random()\n        .toString(36)\n        .substr(2, 9)\n    );\n  };\n\n  const [todos, setTodos] = useState([\n    { id: generateID(), isDone: false, content: \"hello1\" },\n    { id: generateID(), isDone: false, content: \"hello2\" },\n    { id: generateID(), isDone: false, content: \"hello3\" },\n    { id: generateID(), isDone: false, content: \"hello4\" },\n  ]);\n\n  return (\n    <Container>\n      <Title title={\"Todo List\"} />\n      {todos.map(todo => (\n        <Todo\n          key={todo.id}\n          todo={todo}\n          checkBoxChanged={() => \"hello\"}\n          deleteTodo={() => \"return\"}\n        />\n      ))}\n    </Container>\n  );\n};\n\nexport default TodoListContainer;\n","import React from \"react\";\nimport TodoListContainer from \"./containers/TodoListContainer\";\nimport \"./App.css\";\n\nconst App = () => {\n  return <TodoListContainer />;\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}